import mysql.connector
from datetime import datetime
def connect_to_database():
    return mysql.connector.connect(
        host='localhost',       
        user='root',
        passwd='ics311',
        database='ics311_project'
    )
 
def execute_query(cursor, query):
    cursor.execute(query)
    return cursor.fetchall()
 
def print_report(report_title, column_names, data):
    print(f"Report: {report_title}")
    print(f"Generated by: Lucas Skjordal")
    print(f"Date: {datetime.now().strftime('%Y-%m-%d')}\n")
    print(", ".join(column_names))
    for row in data:
        print(", ".join(str(item) for item in row))
 
def report_one():
    query = "SELECT SupplierID, Name, ContactInfo FROM Supplier;"
    column_names = ["SupplierID", "Name", "ContactInfo"]
    with connect_to_database() as conn:
        with conn.cursor() as cursor:
            data = execute_query(cursor, query)
    print_report("Supplier Information", column_names, data)
 
def report_two():
    query = """
    SELECT w.Name, w.Type, w.Vintage, s.Name 
    FROM Wine w 
    JOIN Supplier s ON w.SupplierID = s.SupplierID;
    """
    column_names = ["Wine Name", "Type", "Vintage", "Supplier Name"]
    with connect_to_database() as conn:
        with conn.cursor() as cursor:
            data = execute_query(cursor, query)
    print_report("Wine and Supplier Information", column_names, data)
 
def report_three():
    user_input = input("Enter Supplier ID: ")
    query = f"SELECT Name, Type, Vintage, Price FROM Wine WHERE SupplierID = {user_input};"
    column_names = ["Name", "Type", "Vintage", "Price"]
    with connect_to_database() as conn:
        with conn.cursor() as cursor:
            data = execute_query(cursor, query)
    print_report("Wines from a Specific Supplier", column_names, data)
 
def main():
    print("Generating Report 1...")
    report_one()
 
    print("\nGenerating Report 2...")
    report_two()

    print("\nGenerating Report 3...")
    report_three()
 
if __name__ == "__main__":
    main()
